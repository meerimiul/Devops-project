name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - testing
      - staging
      - pre-production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Docker on Amazon Linux
        run: |
          sudo amazon-linux-extras install docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          sudo chkconfig docker on

      - name: Build and Push Apache Docker Image
        run: |
          docker build -t meerim89/devops-project-apache:latest -f Dockerfile_php_apache .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push meerim89/devops-project-apache:latest

      - name: Build and Push MySQL Docker Image
        run: |
          docker build -t meerim89/devops-project-mysql:latest -f Dockerfile_mysql .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push meerim89/devops-project-mysql:latest

      - name: Build and Push Redis Docker Image
        run: |
          docker build -t meerim89/devops-project-redis:latest -f Dockerfile_redis .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push meerim89/devops-project-redis:latest

      - name: Build and Push Nginx Docker Image
        run: |
          docker build -t meerim89/devops-project-nginx:latest -f Dockerfile_nginx .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push meerim89/devops-project-nginx:latest

  testing:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Deploy to Testing
        run: |
          chmod 400 path/to/your/private-key.pem
          ssh -i path/to/your/private-key.pem ec2-user@your-testing-ec2-ip 'bash -s' << 'ENDSSH'
          docker-compose -f docker-compose.testing.yml pull
          docker-compose -f docker-compose.testing.yml up -d
          ENDSSH

  staging:
    runs-on: ubuntu-latest

    needs: testing

    steps:
      - name: Deploy to Staging
        run: |
          chmod 400 path/to/your/private-key.pem
          ssh -i path/to/your/private-key.pem ec2-user@your-staging-ec2-ip 'bash -s' << 'ENDSSH'
          docker-compose -f docker-compose.staging.yml pull
          docker-compose -f docker-compose.staging.yml up -d
          ENDSSH

  pre-production:
    runs-on: ubuntu-latest

    needs: staging

    steps:
      - name: Deploy to Pre-Production
        run: |
          chmod 400 path/to/your/private-key.pem
          ssh -i path/to/your/private-key.pem ec2-user@your-pre-production-ec2-ip 'bash -s' << 'ENDSSH'
          docker-compose -f docker-compose.pre-production.yml pull
          docker-compose -f docker-compose.pre-production.yml up -d
          ENDSSH

  approve:
    runs-on: ubuntu-latest

    needs:
      - pre-production

    steps:
      - name: Manual Approval
        uses: softprops/action-approve@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "This deployment requires manual approval."

